{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport test from \"./components/Login/test\";\n\n// import Login from \"./components/Login/Login\";\n// import Home from \"./components/Home/Home\";\n// import MainHeader from \"./components/MainHeader/MainHeader\";\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n//   useEffect(() => {\n//     const isLoggedInStorgeInformation = localStorage.getItem(\"isLoggedIn\");\n\n//     if (isLoggedInStorgeInformation === \"1\") {\n//       setIsLoggedIn(true);\n//     }\n//   }, []);\n\n//   const loginHandler = (email, password) => {\n//     // We should of course check email and password\n//     // But it's just a dummy/ demo anyways\n//     localStorage.setItem(\"isLoggedIn\", \"1\");\n//     setIsLoggedIn(true);\n//   };\n\n//   const logoutHandler = () => {\n//     setIsLoggedIn(false);\n//     localStorage.removeItem(\"isLoggedIn\");\n//   };\n\n//   return (\n//     <React.Fragment>\n//       <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n//       <main>\n//         {!isLoggedIn && <Login onLogin={loginHandler} />}\n//         {isLoggedIn && <Home onLogout={logoutHandler} />}\n//       </main>\n//     </React.Fragment>\n//   );\n// }\n\nfunction App() {}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","test","App"],"sources":["/Users/srujanpapaiahgari/Downloads/react-course/project-4/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport test from \"./components/Login/test\";\n\n// import Login from \"./components/Login/Login\";\n// import Home from \"./components/Home/Home\";\n// import MainHeader from \"./components/MainHeader/MainHeader\";\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n//   useEffect(() => {\n//     const isLoggedInStorgeInformation = localStorage.getItem(\"isLoggedIn\");\n\n//     if (isLoggedInStorgeInformation === \"1\") {\n//       setIsLoggedIn(true);\n//     }\n//   }, []);\n\n//   const loginHandler = (email, password) => {\n//     // We should of course check email and password\n//     // But it's just a dummy/ demo anyways\n//     localStorage.setItem(\"isLoggedIn\", \"1\");\n//     setIsLoggedIn(true);\n//   };\n\n//   const logoutHandler = () => {\n//     setIsLoggedIn(false);\n//     localStorage.removeItem(\"isLoggedIn\");\n//   };\n\n//   return (\n//     <React.Fragment>\n//       <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n//       <main>\n//         {!isLoggedIn && <Login onLogin={loginHandler} />}\n//         {isLoggedIn && <Home onLogout={logoutHandler} />}\n//       </main>\n//     </React.Fragment>\n//   );\n// }\n\nfunction App() {}\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,yBAAyB;;AAE1C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAG,GAAG,CAAC;AAAC,KAARA,GAAG;AAEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}